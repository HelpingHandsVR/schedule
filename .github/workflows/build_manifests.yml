name: "Build schedule manifests"

on:
  push:
    branches:
      - main
  schedule:
    # 5:17am UTC every day
    # This ends up being ~midnight in the US, ~5/6am in the UK, and ~midday in Asia, so we would not usually expect
    #  many events to be running at this time, so it is safer to update here.
    # We choose the weird minute offset of 17 because GitHub Actions experiences a lot of load on the hour and the
    #  likelihood of the workflow failing to run is reduced if we do it at an off-peak time.
    - cron: "17 5 * * *"
    # On Mondays, we also update at 00:17 and 11:17 UTC.
    # This is because Mondays are when the schedules 'roll over' to the next week. Each event lane 'rolls over' at
    #  5am in its default timezone, so running the jobs at these times allows the event schedule to be properly
    #  updated before any events would realistically happen in any of the given lanes.
    - cron: "17 0,11 * * 1"
  workflow_dispatch: {}

jobs:
  build_manifests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install requirements
        run: |
          pip install -U -r scripts/requirements.txt

      - name: Generate manifests
        env:
          GLOBAL_SCHEDULE_WEBHOOK_URL: ${{ secrets.GLOBAL_SCHEDULE_WEBHOOK_URL }}
          ASL_SCHEDULE_WEBHOOK_URL: ${{ secrets.ASL_SCHEDULE_WEBHOOK_URL }}
          BSL_SCHEDULE_WEBHOOK_URL: ${{ secrets.BSL_SCHEDULE_WEBHOOK_URL }}
          DGS_SCHEDULE_WEBHOOK_URL: ${{ secrets.DGS_SCHEDULE_WEBHOOK_URL }}
          JSL_SCHEDULE_WEBHOOK_URL: ${{ secrets.JSL_SCHEDULE_WEBHOOK_URL }}
          KSL_SCHEDULE_WEBHOOK_URL: ${{ secrets.KSL_SCHEDULE_WEBHOOK_URL }}
          LSF_SCHEDULE_WEBHOOK_URL: ${{ secrets.LSF_SCHEDULE_WEBHOOK_URL }}
        run: |
          python scripts/build_manifests.py

      - name: Transfer manifests to deploy branch
        shell: bash
        run: |
          # Copy the manifests to a temporary directory
          export MANIFESTS_TEMP=$(mktemp -d)
          cp -r output/* $MANIFESTS_TEMP

          # Clear the repo so we can switch branches
          git clean -dfx

          # Switch branches to deploy
          git fetch origin deploy
          git checkout deploy

          # If the last commit was by GitHub Actions, revert it
          if [[ "$(git show -s --format='%ae' HEAD)" == *"github-actions"* ]]; then
            git reset --hard HEAD^;
          fi

          # Delete the output directory if it is there
          rm -rf output

          # Make a new output directory and put our generated artifacts there
          mkdir -p output
          cp -r ${MANIFESTS_TEMP}/* output

          # Upload the manifest
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git add .
          git commit -m "Autogenerated manifests created at $(date +%Y-%m-%d_%H-%M)"
          git push --force
